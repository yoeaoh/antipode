---
import Layout from '../layouts/Layout.astro';
---

<script>
import { Scene, SphereGeometry, Vector3, PerspectiveCamera, WebGLRenderer, Color, Clock } from 'three';
// import { OrbitControls } from 'https://unpkg.com/three@0.146/examples/jsm/controls/OrbitControls.js';
import { createSculptureWithGeometry } from 'https://unpkg.com/shader-park-core/dist/shader-park-core.esm.js';
import { spCode } from '../layouts/sp-code.js';

let scene = new Scene();

let camera = new PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );
camera.position.z = 3.5;

let renderer = new WebGLRenderer({ 
    // antialias: true, 
    // transparent: true 
});

const canvas = document.querySelector('#three');

renderer.setSize( canvas?.clientWidth, canvas?.clientHeight );
camera.aspect = canvas?.clientWidth / canvas?.clientHeight;
camera.updateProjectionMatrix();
renderer.setPixelRatio( window.devicePixelRatio );
renderer.setClearColor( new Color(1, 1, 1), 0);
canvas?.appendChild( renderer.domElement );

let clock = new Clock();

let state = {
    mouse : new Vector3(),
    currMouse : new Vector3(),
    pointerDown: 0.0,
    currPointerDown: 0.0,
    time: 0.0
}

window.addEventListener( 'pointermove', (event) => {
state.currMouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;
    state.currMouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;
}, false );

// window.addEventListener( 'pointerdown', (event) => state.currPointerDown = 1.0, false );
// window.addEventListener( 'pointerup', (event) => state.currPointerDown = 0.0, false );

let geometry = new SphereGeometry(2, 45, 45);
// let geometry2 = new SphereGeometry(20, 20, 20);

// geometry.position(20, 20, 0);

// // // Create Shader Park Sculpture
let mesh = createSculptureWithGeometry(geometry, spCode(), () => ({
    time: state.time * 3,
    // pointerDown: state.pointerDown,
    mouse: state.mouse,
    _scale : .5
}));

// let mesh2 = createSculptureWithGeometry(geometry2, spCode(), () => ({
//     time: state.time * 3,
//     // pointerDown: state.pointerDown,
//     mouse: state.mouse,
//     _scale : .5
// }));

scene.add(mesh);
// scene.add(mesh2);

// Add Controlls
// let controls = new OrbitControls( camera, renderer.domElement, {
//     enableDamping : true,
//     dampingFactor : 0.25,
//     zoomSpeed : 0.5,
//     rotateSpeed : 0.5
// });

let onWindowResize = () => {
    camera.aspect = canvas?.clientWidth / canvas?.clientHeight;
    camera.updateProjectionMatrix();
    renderer.setSize( canvas?.clientWidth, canvas?.clientHeight );
}

window.addEventListener( 'resize', onWindowResize );

let render = () => {
    requestAnimationFrame( render );
    state.time += clock.getDelta();
    // controls.update();
    // state.pointerDown = .1 * state.currPointerDown + .9 * state.pointerDown;
    state.mouse.lerp(state.currMouse, .05 );
    renderer.render( scene, camera );
};

render();
</script>

<Layout title="Antipode hair">    
	<div class="section hero">
        <div class="hero__logo">
            ANTIPODE
        </div>

        <div class="hero__text hero-text">
            <div class="hero-text__title">
                Hair Community
                <br>
                It makes sense.
            </div>

            <div class="hero-text__address">
                üìç–ú–∏–Ω—Å–∫ ‚Ä¢ –ù–µ–º–∏–≥–∞, 5
            </div>
        </div>

        <div class="hero__image hero-image" id="three">
            <!-- <img src="./hero_image.jpg" alt="ANTIPODE" class="hero-image__img"> -->
        </div>
    </div>

    <div class="section three" id="three">

    </div>

    <div class="section about">
        <div class="about__title">
            –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ
        </div>

        <div class="about__text">
            –ü—Ä–∏–≤–µ—Ç, –º—ã –∫–æ–º–∞–Ω–¥–∞ antipode ‚Äî —Å–æ–æ–±—â–µ—Å—Ç–≤–æ —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤ —Å—Ç—Ä–∏–∂–∫–∏.
            <br>
            –î–µ–ª–∞–µ–º –ª—é–±—É—é –º–∞–≥–∏—é —Å –≤–æ–ª–æ—Å–∞–º–∏: c—Ç—Ä–∏–∂—ë–º, –æ–∫—Ä–∞—à–∏–≤–∞–µ–º, —Å—Ç–∏–ª–∏–∑—É–µ–º.
        </div>
    </div>

    <div class="section portfolio">
        <div class="portfolio__title">
            –ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã
        </div>
    </div>
</Layout>

<style lang="scss">
	.hero {
        display: grid;
        grid-template-columns: 1px 20px repeat(6, (1fr 1px 20px 1px));
        grid-template-rows: repeat(14, 80px);

        &__logo {
            grid-area: 3 / 1 / 6 / -1;
            
            position: relative;

            font-family: 'Open Sans', sans-serif;
            font-size: 120px;
            font-weight: 800;
            text-align: center;
            color: white;

            mix-blend-mode: difference;
        }

        &__text {
            grid-area: 6 / 3 / -1 / 12;

            position: relative;
        }

        &__image {
            grid-area: 2 / 10 / -2 / -3;
        }
    }

    .hero-text {
        display: flex;
        flex-direction: column;
        row-gap: 32px;

        &__title {
            font-size: 72px;
            line-height: 110%;
            font-weight: 600;
        }

        &__address {
            font-size: 32px;
            color: #7a7a7a;
        }
    }

    .hero-image {
        &__img {
            width: 100%;
            aspect-ratio: 1 / 1;
        }
    }

    .about {
        display: grid;
        grid-template-columns: 1px 20px repeat(6, (1fr 1px 20px 1px));
        grid-template-rows: auto;

        padding-bottom: 80px;

        &__title {
            grid-column: 3 / 16;

            font-size: 72px;
            font-family: 'Open Sans', sans-serif;
            font-weight: 900;
            color: #383838;

            margin-bottom: 32px;
        }

        &__text {
            grid-column: 3 / 16;

            font-size: 32px;
            line-height: 140%;
        }
    }

    .portfolio {
        display: grid;
        grid-template-columns: 1px 20px repeat(6, (1fr 1px 20px 1px));
        grid-template-rows: auto;

        &__title {
            grid-column: -3 / -17;

            font-size: 72px;
            font-family: 'Open Sans', sans-serif;
            font-weight: 900;
            text-align: right;
            color: #383838;

            margin-bottom: 32px;
        }
    }
</style>
